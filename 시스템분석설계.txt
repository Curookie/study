시스템분석설계

SDLC(System development Life Cycle)
	1단계 : 시스템 계획 및 선정
	2단계 : 시스템 분석
	3단계 : 시스템 설계
	4단계 : 시스템 구현 및 운영
	경우에 따라서 6단계로 나눌 수 있다.(계획, 선정, 분석, 설계, 구현, 운영)

정보시스템 분석 및 설계 란?
	시스템 분석 및 설계의 주요 목적은 조직의 구성원들이 보다 편하고 효울적으로 주요 업무를 수행할 수 있도록 도와줄 수 있는 소프트웨어들을 이용하여 조직의 시스템을 개선시키는것,
	시스템 분석가는 이러한 소프트웨어들을 개발하는 데 있어 중추적인 역할을 한다.

	정보시스템 분석 및 설계에는 다음과 같은 사항들에 기초한다.
		조직의 목표, 구조, 프로세스에 대한 이해
		이익을 위하여 어떻게 정보기술을 활용하는지에 대한 지식

시스템 분석 및 설계 : 핵심 개념들
	주요목적 : 조직의 시스템의 개선
	이를 위하여 응용소프트웨어의 개발이나 획득, 구성원들의 사용 훈련이 포함된다.
	응용소프트웨어는 시스템(System)이라 불리기도 하는데 조직의 특정 기능이나 프로세스를 지원하기 위해 설계된다.
	응용소프트웨어의 목적
		데이터를 정보로 변환하는것
		구매가가능한 응용소프트웨어 : 워드,엑셀파워포인트등
		그렇지만 조직의 특성에 맟춰서 새로운 응용소프트웨어가 필요할 경우 별도로 개발해야 한다.

	시스템과 관련된 요소들
		응용소프트웨어가 작동할 수 있는 하드웨어, 시스템 소프트웨어(드라이버)
			시스템 소프트웨어 : 컴퓨터의 기능을 도와준다.
			응용소프트웨어    : 문서작성,스프레드시트 작성,인터넷 연결 등과 같은 사용자의 작업을 도와 준다.
		직원들에게 도움을 주기위한 시스템 분석가에 의해 작성된 문서 및 교육자료
		컴퓨터 가동 및 소프트웨어 관리 담당자와 같이 시스테 전반에 걸친 업무에 대한 특정 역할
		부정 및 도난 방지를 위한 통제 소프트웨어
		업무 수행을 위해 소프트웨어를 사용하는 사람들

소프트웨어 엔지니어링 프로세스
	방법론(methodologies)
		최종 산출물, 즉 정보시스템의 개발을 도와주는 단계적 접근방법이다.
		대부분 직접 관찰이나 인터뷰 등과 같은 다양한 개발 기법들과 결합되어 있다.
	기법(techniques)
		시스템 분석가로서 수행한 작업들이 사려깊고, 완전하고, 이해하기에 용이하다는 점을 프로젝트 팀원들에게
		확신시키기 위해 준수하게 될 프로세스들이다. 기법은 정보시스템의 현재와 미래 사용자들을 대상으로 철저한 인터뷰를 실행하는 것,
		시스템 개발 프로젝트의 활동들을 계획하고 관리하는 것, 시스템이 어떻게 동작하는지를 도식화하는 것, 사용자들의 업무지원을 위해
		시스템이 생성해 주는 청구서와 같은 리포트들을 설계하는 것을 포함하여, 시스템의 기능을 결정하기 위한 다양한 작업들을 지원한다.
	도구(tools)
		특정 기법을 쉽게 사용할 수 있도록 도와주는 CASE(Computer-Aided Software Engineering)도구와 같은
		컴퓨터 프로그램을 의미한다.
	조직의 접근방법론, 기법, 도구, 이 3가지 요소들은 시스템 분석 및 설계에 대한 조직의 접근방법을 구성하는 요소들로서 함께 활용된다.


시스템이란
	하나의 사업단위 내에서 사용되는 상호연관된 요소들의 집합,
	이 요소들은 일정한 목적을 위해 서로 연동된다.

시스템의 9가지 특성요소
	1.구성요소(component)
		더 이상 축소시킬 수 없는 부분이거나 부분들이 모인 하나의 집합으로서, 하위시스템(subsystem)이라고 한다.
	2.상호연관(interrelated)
		구성요소의 기능은 어느 정도 다른 구성요소의 기능와 관련되어 있다.
	3.경계선(boundary)
		경게선 안에는 시스템의 모든 구성요소들이 포함되어 있으며, 경계선은 해당시스템의 경계를 설정함으로써
		다른 시스템들과 구분시켜 준다. 경계선 안의 구성요소들은 변경시킬 수 있지만, 경계선 밖의 시스템들은 변경시킬 수 없다.
	4.목적(purpose)
		구성요소들은 시스템의 특정 목적을 달성하기 위해 함께 작동하는데
		이것이 바로 시스템의 존재 이유라 할 수 있다.
	5.환경(environment)
		시스템에 영향을 주는 경계선 밖의 모든것안에 존재한다.
		정보시스템은 환경으로붙터 데이터와 정보를 수신하면서 상호작요한다.
	6.인터페이스(interface)
		시스템과 환경이 맞닿는 지점을 인터페이스라 한다.
		하위시스템들 간에도 인터페이스가 존재한다.
	7.제약조건(constraint)
		환경 내에서 시스템이 할 수 있는 것과 목적을 달성할 수 있는 방법에는 한계(용량,속도,능력)가 있기 때문이다.
		이러한 제약조건들 중 일부는 시스템 안에서 발생하기도 하고 다른 어떤 제약조건들은 환경에서 발생되기도 한다.(만기 날짜 또는 규칙)
	8.입력물
	9.출력물
	10.산출물

시스템 관련 중요 개념들
 시스템 분석가가 알아야 하는 몇 가지의 중요한 시스템 관련 개념들은 다음과 같다.
 1. 분해
 			분해는 시스템을 보다 작은 구성요소들로 분할하는 과정이다.
 2. 모듈화
 			모듈화는 분해를 통해 직접 발생하는 과정으로서, 시스템을 상대적으로 동일한 크기의 덩어리들,
			즉 모듈들로 나누는 것을 의미한다.
 3. 결합
 			결합은 하위시스템이 서로 의존적인 관계를 가지고 있음을 의미한다.
			하위 시스템은 가능한 독립적이어야 하낟.
 4. 응집
 			응집은 하위시스템이 어떤 하나의 기능에 대해 이를 수행하는 정도를 의미한다.

시스템 분석가란
		정보시스템에 대한 분석과 설계를 주로 책임지는 역할을 수행하는 사람.

시스템 개발에서 시스템 분석가의 역할
		시스템 분석가의 역할은 조직 운영에 중요한 영향을 미친다.
		조직의 개선을 위해 사람, 방법, 정보기술을 어떻게 결합시킬지에 대한 결정을 하기 위해 조직의 문제점과 니즈를 분석하는 것이다.
		시스템 분석가는 시스템 사용자 및 비느지스 관리자들이 새롭고 향상된 정보서비스에 대한 요구사항들을
		정의할 수 있도록 도와준다.

시스템 개발 방법론
		조직에서 정보시스템을 분석하고, 설계하고, 구현하고, 유지보수하는데 필요한 모든 단게들을
		수행하기 위해 따르는 표준 프로세스
시스템개발주기
		정보시스템의 개발과정을 보여주는 일련의 단계들

		단계 1: 시스템 계획 및 선정
				SDLC의 첫 단계로서, 정보시스템에 대한 조직의 모든 니즈를 분석하고 정렬하며 ,
				정보시스템에 대한 잠재적 프로젝트를 정의하고, 그 프로젝트의 지속 여부를 결정한다.
		단계 2: 시스템 분석
				SDLC의 한 단계로서, 현재의 시스템을 분석하고 그 시스템을 대체할 수 있는
				시스템을 제안하는 활동을 수행한다.
		단계 3: 시스템 설계
				SDLC의 한 단계로서, 시스템 분석 단계에서 개발하기로 결정한 시스템에 대해 컴퓨터 플랫폼과는
				독립적인 기술을 하는 활동 및 그 이후 여기서 도출된 결과들을 시스템 구현에 필요한
				기술적 내역들로 변환하는 활동을 수행한다.
		단계 4: 시스템 구현및 운영
				SDLC의 최종 단계로서, 정보 시스템을 코드화하고, 테스트하며 설치하는 활동들과
				정보시스템을 체계적으로 수리하고 개선하는 활동들

시스템 개발에 대한 대안적 접근방법들
		프로토 타이핑 : 원하는 시스템을 축소된 범이이지만 가동되는 버전으로 설계하고 구축하는 것
		장점 : 분석 및 설계에 사용자가 동참한다.
					말이나 추상적 형태가 아니라 보다 구체적인 형태로 요구사항을 포착하는 것이다.


CASE 도구들
		시스템 개발 프로세스의 일정 부분을 자동화된 방식으로 수행할 수 있도록
		지원해 주는 소프트웨어 도구
		다이어그래밍 도구, 컴퓨터 화면 및 리포트 생성기, 분석 도구,
		중앙 리파지토리, 문서 생성기, 코드생성기 등의 유형이 있다.
리파지토리
		모든 다이어그램, 양식 및 리포트 정의, 데이터 구조, 데이터 정의,
		프로세스 흐름과 논리, 그리고 여타의 조직 및 시스템에 관한 정의들을
		포함하는 중앙집중화된 데이터베이스.
		리파지토리는 데이터와 도구 통합, 데이터와 데이터 통합을
		연속적으로 이루어 낼 수 있는 일련의 메커니즘들과 구조들을 제공한다.

합동 어플리케이션 개발(JAD)
			사용자들, 관리자들, 분석가들이 시스템 요구사항들을 규정하거나 검토하기 위한
			일련의 집중적인 회의를 통해 여러날 동안 함께 작업하는 구조화된 프로세스(brain storming)
			신속 어플리케이션 개발(RAD)
신속 어플리케이션 개발(RAD)
		정보시스템에 대한 설계 및 구현 시간을 현저하게 줄이기 위해
		만들어진 시스템 개발 방법론
		프로토타이핑, CASE,JAD는 신속어플리케이션 개발을 지원하는 핵심도구들이다.

애자일 방법론
		적응적 방법론들, 역할 보다는 사람, 자기 적응적 개발 프로세스에
		초점을 맞추는 최신 시스템 개발 접근방법

문제
	2. 정보시스템 개발에서 시스템 분석가의 역할을 설명하라.
		시스템 분석가는 시스템 개발에 있어 핵심적인 역할을 수행하게 된다.
		그들은 비즈니스 사용자와 기술 인력들과의 사이에서 연락원 역할을 하며,
		분석가들은 성공을 위해서 분석능력, 기술능력, 관리능력, 대인관계 능력과 같은
		4가지의 능력들을 개발할 필요가 있다.

	3. 시스템 개발생명주기(SDLC)를 설명하라.
	 SDLC란 정보시스템 개발과정을 보여주는 일련의 단계이다
	 1 시스템 계획 및 선정 :정보시스템에 대한 조직의 모든 니즈를 분석하며, 프로젝트를 정의, 프로젝트의 지속 여부를 결정한다.
	 2. 시스템 분석 : 현재의 시스템을 분석하고 그 시스템을 대체할 수 있는 시스템을 제안하는 활동을 수행한다.
	 3. 시스템 설계 : 분석 단게에서 산출된 분석 문서를 바탕으로 소프트웨어를 기술적으로 어떻게 구현할 것인가를 설계하는 단계이다.
	 4. 시스템 구현 및 운영 : 정보 시스템을 코드화하고, 테스트하며 설치하는 활동 들과 정보시스템을 체계적으로 수리하고 개선하는 단계이다.
	 의 4단계로 나뉘어진다.


	 응용 소프트웨어 4번
	 	조직의 데이터를 처리하고 사용자들을 지원하도록 설계된 소프트웨어로서,
		스프레드시트, 워드프로세서, 데이터베이스관리시스템 등을 포함하고 있다.
	 경계선 11번
	 	시스템 내부와 외부를 표시해 주는 선으로서 환경으로부터 시스템을 구분한다.
	 응집 24번
	 	하나의 시스템또는 하위시스템이 하나의 기능을 수행하는 정도
	 구성요소 9번
	 	더 이상 축소시킬 수 없는 하나의 시스템 구성부분 또는 부부늗ㄹ이 모인 하나의 집합으로서
		하위시스템으로도 불린다.
	 CASE 25번
	 	시스템 개발 프로세스의 일정 부분에 대해 자동화된 지원을 해주는 소프트웨어 도구
	 결합 23번
	 	하위시스템들이 서로에게 의존하는 정도
	 분해 21번
	 	시스템을 보다 작은 구성요소들로 분할하는 과정으로서, 기능적 분해 라고도 한다.
	 정보시스템 분석 및 설계
	 	정보시스템을 개발하고 유지관리하는 프로세스
	 인터페이스 16번
	 		시스템이 환경과 만나는 접촉 부분 또는 각 하위시스템들이 만나는 부분
	 모듈화  28번
	 	시스템을 일정한 크기의 덩어리들, 즉 모듈들로 나누는 것
	 프로토타이핑 7번
	 	원하는 시스템을 축소된 범위이지만 가도오디는 버전으로 설계하고 구축하는 것
	 리파지토리 26번
	 	모든 다이어그램, 양식 및 리포트 정의, 데이터 구조, 데이터 정의, 프로세스 흐름과 논리, 그리고 여타의
		조직 및 시스템에 관한 정의들을 포함하는 중앙집중화된 데이터베이스, 데이터와 데이터 통합을 연속적으로
		이루어낼 수 있는 이렬ㄴ의 메키너즘들과 구조들을 제공한다.
	 시스템 분석
	 	현재 시스템을 조사하고 교체 가능한 대안 시스템들을 제안하는 SDLC의 단계
	 시스템 분석가 1번
		정보시스템의 분석과 설계를 위해 가장 책임 있는 조직적 역할

1장 끝.

	아웃소싱
		조직의 정보시스템 애플리케이션 및 운영의 일부 또는
		전체에 관한 책임을 외부 기업에게 이양하는것
	전사적자원관리시스템(ERP)
		하나의 거래처리가 여러 개의 분리된 시스템들이 아니라
		하나으 ㅣ정보시스템 내에서 연속적으로 처리도리 수 있도록
		기존의 비즈니스 기능 각각을 일련의 모듈들로 통합한 시스템
	클리우드 컴퓨팅
		Saas
			소프트웨어 서비스
		Haas
			하드웨어 서비스

		장점
			it 직원을 줄일 수 있다.
			내부에서 개발하는 거ㅕㅇ우보다 더 짧은 시간내에 에플리케이션 사용가능
			품질 높은 애플리케이션들을 더 저렴한 비용으로 사용가능

	오픈소스 소프트웨어
		소스코드 그 자체를 무료로 사용가능하다.
=======
시스템분석설계

SDLC(System development Life Cycle)
	1단계 : 시스템 계획 및 선정
	2단계 : 시스템 분석
	3단계 : 시스템 설계
	4단계 : 시스템 구현 및 운영
	경우에 따라서 6단계로 나눌 수 있다.(계획, 선정, 분석, 설계, 구현, 운영)

정보시스템 분석 및 설계 란?
	시스템 분석 및 설계의 주요 목적은 조직의 구성원들이 보다 편하고 효울적으로 주요 업무를 수행할 수 있도록 도와줄 수 있는 소프트웨어들을 이용하여 조직의 시스템을 개선시키는것,
	시스템 분석가는 이러한 소프트웨어들을 개발하는 데 있어 중추적인 역할을 한다.

	정보시스템 분석 및 설계에는 다음과 같은 사항들에 기초한다.
		조직의 목표, 구조, 프로세스에 대한 이해
		이익을 위하여 어떻게 정보기술을 활용하는지에 대한 지식

시스템 분석 및 설계 : 핵심 개념들
	주요목적 : 조직의 시스템의 개선
	이를 위하여 응용소프트웨어의 개발이나 획득, 구성원들의 사용 훈련이 포함된다.
	응용소프트웨어는 시스템(System)이라 불리기도 하는데 조직의 특정 기능이나 프로세스를 지원하기 위해 설계된다.
	응용소프트웨어의 목적
		데이터를 정보로 변환하는것
		구매가가능한 응용소프트웨어 : 워드,엑셀파워포인트등
		그렇지만 조직의 특성에 맟춰서 새로운 응용소프트웨어가 필요할 경우 별도로 개발해야 한다.

	시스템과 관련된 요소들
		응용소프트웨어가 작동할 수 있는 하드웨어, 시스템 소프트웨어(드라이버)
			시스템 소프트웨어 : 컴퓨터의 기능을 도와준다.
			응용소프트웨어    : 문서작성,스프레드시트 작성,인터넷 연결 등과 같은 사용자의 작업을 도와 준다.
		직원들에게 도움을 주기위한 시스템 분석가에 의해 작성된 문서 및 교육자료
		컴퓨터 가동 및 소프트웨어 관리 담당자와 같이 시스테 전반에 걸친 업무에 대한 특정 역할
		부정 및 도난 방지를 위한 통제 소프트웨어
		업무 수행을 위해 소프트웨어를 사용하는 사람들

소프트웨어 엔지니어링 프로세스
	방법론(methodologies)
		최종 산출물, 즉 정보시스템의 개발을 도와주는 단계적 접근방법이다.
		대부분 직접 관찰이나 인터뷰 등과 같은 다양한 개발 기법들과 결합되어 있다.
	기법(techniques)
		시스템 분석가로서 수행한 작업들이 사려깊고, 완전하고, 이해하기에 용이하다는 점을 프로젝트 팀원들에게
		확신시키기 위해 준수하게 될 프로세스들이다. 기법은 정보시스템의 현재와 미래 사용자들을 대상으로 철저한 인터뷰를 실행하는 것,
		시스템 개발 프로젝트의 활동들을 계획하고 관리하는 것, 시스템이 어떻게 동작하는지를 도식화하는 것, 사용자들의 업무지원을 위해
		시스템이 생성해 주는 청구서와 같은 리포트들을 설계하는 것을 포함하여, 시스템의 기능을 결정하기 위한 다양한 작업들을 지원한다.
	도구(tools)
		특정 기법을 쉽게 사용할 수 있도록 도와주는 CASE(Computer-Aided Software Engineering)도구와 같은
		컴퓨터 프로그램을 의미한다.
	조직의 접근방법론, 기법, 도구, 이 3가지 요소들은 시스템 분석 및 설계에 대한 조직의 접근방법을 구성하는 요소들로서 함께 활용된다.


시스템이란
	하나의 사업단위 내에서 사용되는 상호연관된 요소들의 집합,
	이 요소들은 일정한 목적을 위해 서로 연동된다.

시스템의 9가지 특성요소
	1.구성요소(component)
		더 이상 축소시킬 수 없는 부분이거나 부분들이 모인 하나의 집합으로서, 하위시스템(subsystem)이라고 한다.
	2.상호연관(interrelated)
		구성요소의 기능은 어느 정도 다른 구성요소의 기능와 관련되어 있다.
	3.경계선(boundary)
		경게선 안에는 시스템의 모든 구성요소들이 포함되어 있으며, 경계선은 해당시스템의 경계를 설정함으로써
		다른 시스템들과 구분시켜 준다. 경계선 안의 구성요소들은 변경시킬 수 있지만, 경계선 밖의 시스템들은 변경시킬 수 없다.
	4.목적(purpose)
		구성요소들은 시스템의 특정 목적을 달성하기 위해 함께 작동하는데
		이것이 바로 시스템의 존재 이유라 할 수 있다.
	5.환경(environment)
		시스템에 영향을 주는 경계선 밖의 모든것안에 존재한다.
		정보시스템은 환경으로붙터 데이터와 정보를 수신하면서 상호작요한다.
	6.인터페이스(interface)
		시스템과 환경이 맞닿는 지점을 인터페이스라 한다.
		하위시스템들 간에도 인터페이스가 존재한다.
	7.제약조건(constraint)
		환경 내에서 시스템이 할 수 있는 것과 목적을 달성할 수 있는 방법에는 한계(용량,속도,능력)가 있기 때문이다.
		이러한 제약조건들 중 일부는 시스템 안에서 발생하기도 하고 다른 어떤 제약조건들은 환경에서 발생되기도 한다.(만기 날짜 또는 규칙)
	8.입력물
	9.출력물
	10.산출물

시스템 관련 중요 개념들
 시스템 분석가가 알아야 하는 몇 가지의 중요한 시스템 관련 개념들은 다음과 같다.
 1. 분해
 			분해는 시스템을 보다 작은 구성요소들로 분할하는 과정이다.
 2. 모듈화
 			모듈화는 분해를 통해 직접 발생하는 과정으로서, 시스템을 상대적으로 동일한 크기의 덩어리들,
			즉 모듈들로 나누는 것을 의미한다.
 3. 결합
 			결합은 하위시스템이 서로 의존적인 관계를 가지고 있음을 의미한다.
			하위 시스템은 가능한 독립적이어야 하낟.
 4. 응집
 			응집은 하위시스템이 어떤 하나의 기능에 대해 이를 수행하는 정도를 의미한다.

시스템 분석가란
		정보시스템에 대한 분석과 설계를 주로 책임지는 역할을 수행하는 사람.

시스템 개발에서 시스템 분석가의 역할
		시스템 분석가의 역할은 조직 운영에 중요한 영향을 미친다.
		조직의 개선을 위해 사람, 방법, 정보기술을 어떻게 결합시킬지에 대한 결정을 하기 위해 조직의 문제점과 니즈를 분석하는 것이다.
		시스템 분석가는 시스템 사용자 및 비느지스 관리자들이 새롭고 향상된 정보서비스에 대한 요구사항들을
		정의할 수 있도록 도와준다.

시스템 개발 방법론
		조직에서 정보시스템을 분석하고, 설계하고, 구현하고, 유지보수하는데 필요한 모든 단게들을
		수행하기 위해 따르는 표준 프로세스
시스템개발주기
		정보시스템의 개발과정을 보여주는 일련의 단계들

		단계 1: 시스템 계획 및 선정
				SDLC의 첫 단계로서, 정보시스템에 대한 조직의 모든 니즈를 분석하고 정렬하며 ,
				정보시스템에 대한 잠재적 프로젝트를 정의하고, 그 프로젝트의 지속 여부를 결정한다.
		단계 2: 시스템 분석
				SDLC의 한 단계로서, 현재의 시스템을 분석하고 그 시스템을 대체할 수 있는
				시스템을 제안하는 활동을 수행한다.
		단계 3: 시스템 설계
				SDLC의 한 단계로서, 시스템 분석 단계에서 개발하기로 결정한 시스템에 대해 컴퓨터 플랫폼과는
				독립적인 기술을 하는 활동 및 그 이후 여기서 도출된 결과들을 시스템 구현에 필요한
				기술적 내역들로 변환하는 활동을 수행한다.
		단계 4: 시스템 구현및 운영
				SDLC의 최종 단계로서, 정보 시스템을 코드화하고, 테스트하며 설치하는 활동들과
				정보시스템을 체계적으로 수리하고 개선하는 활동들

시스템 개발에 대한 대안적 접근방법들
		프로토 타이핑 : 원하는 시스템을 축소된 범이이지만 가동되는 버전으로 설계하고 구축하는 것
		장점 : 분석 및 설계에 사용자가 동참한다.
					말이나 추상적 형태가 아니라 보다 구체적인 형태로 요구사항을 포착하는 것이다.


CASE 도구들
		시스템 개발 프로세스의 일정 부분을 자동화된 방식으로 수행할 수 있도록
		지원해 주는 소프트웨어 도구
		다이어그래밍 도구, 컴퓨터 화면 및 리포트 생성기, 분석 도구,
		중앙 리파지토리, 문서 생성기, 코드생성기 등의 유형이 있다.
리파지토리
		모든 다이어그램, 양식 및 리포트 정의, 데이터 구조, 데이터 정의,
		프로세스 흐름과 논리, 그리고 여타의 조직 및 시스템에 관한 정의들을
		포함하는 중앙집중화된 데이터베이스.
		리파지토리는 데이터와 도구 통합, 데이터와 데이터 통합을
		연속적으로 이루어 낼 수 있는 일련의 메커니즘들과 구조들을 제공한다.

합동 어플리케이션 개발(JAD)
			사용자들, 관리자들, 분석가들이 시스템 요구사항들을 규정하거나 검토하기 위한
			일련의 집중적인 회의를 통해 여러날 동안 함께 작업하는 구조화된 프로세스(brain storming)
			신속 어플리케이션 개발(RAD)
신속 어플리케이션 개발(RAD)
		정보시스템에 대한 설계 및 구현 시간을 현저하게 줄이기 위해
		만들어진 시스템 개발 방법론
		프로토타이핑, CASE,JAD는 신속어플리케이션 개발을 지원하는 핵심도구들이다.

애자일 방법론
		적응적 방법론들, 역할 보다는 사람, 자기 적응적 개발 프로세스에
		초점을 맞추는 최신 시스템 개발 접근방법

문제
	2. 정보시스템 개발에서 시스템 분석가의 역할을 설명하라.
		시스템 분석가는 시스템 개발에 있어 핵심적인 역할을 수행하게 된다.
		그들은 비즈니스 사용자와 기술 인력들과의 사이에서 연락원 역할을 하며,
		분석가들은 성공을 위해서 분석능력, 기술능력, 관리능력, 대인관계 능력과 같은
		4가지의 능력들을 개발할 필요가 있다.

	3. 시스템 개발생명주기(SDLC)를 설명하라.
	 SDLC란 정보시스템 개발과정을 보여주는 일련의 단계이다
	 1 시스템 계획 및 선정 :정보시스템에 대한 조직의 모든 니즈를 분석하며, 프로젝트를 정의, 프로젝트의 지속 여부를 결정한다.
	 2. 시스템 분석 : 현재의 시스템을 분석하고 그 시스템을 대체할 수 있는 시스템을 제안하는 활동을 수행한다.
	 3. 시스템 설계 : 분석 단게에서 산출된 분석 문서를 바탕으로 소프트웨어를 기술적으로 어떻게 구현할 것인가를 설계하는 단계이다.
	 4. 시스템 구현 및 운영 : 정보 시스템을 코드화하고, 테스트하며 설치하는 활동 들과 정보시스템을 체계적으로 수리하고 개선하는 단계이다.
	 의 4단계로 나뉘어진다.


	 응용 소프트웨어 4번
	 	조직의 데이터를 처리하고 사용자들을 지원하도록 설계된 소프트웨어로서,
		스프레드시트, 워드프로세서, 데이터베이스관리시스템 등을 포함하고 있다.
	 경계선 11번
	 	시스템 내부와 외부를 표시해 주는 선으로서 환경으로부터 시스템을 구분한다.
	 응집 24번
	 	하나의 시스템또는 하위시스템이 하나의 기능을 수행하는 정도
	 구성요소 9번
	 	더 이상 축소시킬 수 없는 하나의 시스템 구성부분 또는 부부늗ㄹ이 모인 하나의 집합으로서
		하위시스템으로도 불린다.
	 CASE 25번
	 	시스템 개발 프로세스의 일정 부분에 대해 자동화된 지원을 해주는 소프트웨어 도구
	 결합 23번
	 	하위시스템들이 서로에게 의존하는 정도
	 분해 21번
	 	시스템을 보다 작은 구성요소들로 분할하는 과정으로서, 기능적 분해 라고도 한다.
	 정보시스템 분석 및 설계
	 	정보시스템을 개발하고 유지관리하는 프로세스
	 인터페이스 16번
	 		시스템이 환경과 만나는 접촉 부분 또는 각 하위시스템들이 만나는 부분
	 모듈화  28번
	 	시스템을 일정한 크기의 덩어리들, 즉 모듈들로 나누는 것
	 프로토타이핑 7번
	 	원하는 시스템을 축소된 범위이지만 가도오디는 버전으로 설계하고 구축하는 것
	 리파지토리 26번
	 	모든 다이어그램, 양식 및 리포트 정의, 데이터 구조, 데이터 정의, 프로세스 흐름과 논리, 그리고 여타의
		조직 및 시스템에 관한 정의들을 포함하는 중앙집중화된 데이터베이스, 데이터와 데이터 통합을 연속적으로
		이루어낼 수 있는 이렬ㄴ의 메키너즘들과 구조들을 제공한다.
	 시스템 분석
	 	현재 시스템을 조사하고 교체 가능한 대안 시스템들을 제안하는 SDLC의 단계
	 시스템 분석가 1번
		정보시스템의 분석과 설계를 위해 가장 책임 있는 조직적 역할

1장 끝.

	아웃소싱
		조직의 정보시스템 애플리케이션 및 운영의 일부 또는
		전체에 관한 책임을 외부 기업에게 이양하는것
	전사적자원관리시스템(ERP)
		하나의 거래처리가 여러 개의 분리된 시스템들이 아니라
		하나으 ㅣ정보시스템 내에서 연속적으로 처리도리 수 있도록
		기존의 비즈니스 기능 각각을 일련의 모듈들로 통합한 시스템
	클리우드 컴퓨팅
		Saas
			소프트웨어 서비스
		Haas
			하드웨어 서비스

		장점
			it 직원을 줄일 수 있다.
			내부에서 개발하는 거ㅕㅇ우보다 더 짧은 시간내에 에플리케이션 사용가능
			품질 높은 애플리케이션들을 더 저렴한 비용으로 사용가능

	오픈소스 소프트웨어
		소스코드 그 자체를 무료로 사용가능하다.

test
