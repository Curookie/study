<<<<<<< HEAD
﻿서블릿과 서블릿 컨테이너
	서블릿 : 자바로 웹프로그래밍을 하려고 만들어진 기술.
	서블릿 컨테이너 : 서블릿 컨테이너는 웹 서버와 마찬가지로 URL을 기반으로 한 요청에 따라 해당 서블릿을 실행한다.
	JSP나 서블릿으로 개발하려면 아파치 톰캣과 같은 서블릿 컨테이너가 필요하다.

클라이언트 요청에 대한 서블릿 동작과정
	1. 컨테이너가 서블릿 클래스를 로딩
	2. 서블릿 클래스으 ㅣ생성자 메서드를 호출해서 인스턴스를 생성한다.
	3. 생서된 인스턴스의 init() 메서드가 호출된다. init()메서드는 서블릿
	생명주기에서 단 한번만 실행된다. init()메서드는 각종 초기화 작업등을 수행한다.
	4. 서블릿에 대한 사용자 요청에 대해서는 web.xml 파일 혹은 애너테이션을 참조해서 url 매핑을 확인하고,
	해당 서블릿 인스턴스로부터 스레드를 생성하고 service()메서드를 호출한다.
	5. destroy()메서드는 서블릿이 종료될 때 호출되는 메서드이다.

get 방식
query_string 환경변수를 통해 서버로 전달된다.
방식
http://www.xxx.co.kr/sevlet/login?id=hj&name=hong
url에 노출이 되기때문에 보안상 문제가 생길 수 있다.
240byte까지 데이터 전송 가능하다.
post 방식
서버로 정보를 올리려고 설계된 방식이다.
데이터크기에 제한이 없다.
url에 표시가 되지않는다.

지시어
<%@ %>
	page 지시어( <%@ page %> )
	현재의 jsp 페이지를 컨테이너에서 처리하는 데 필요한 각종 속성을 기술하는 부분으로
	대게 소스코드 맨 앞에서 볼 수 있다.
	language 사용할 스크립트 언어를 지정, 생략할경우 기본값으로 java가 들어간다.
	import 데이터베이스 처리와 기타 외부 패키지나 클래스를 사용해야하는 경우 기술
	session true로 해놓을 경우 세션을 사용할 수 있다.
	autoflush 버퍼를 자동으로 비울것인지 지정
	pageEncoding
	contenttype
	errorPage 현재 페이지에서 오류가 발생할 경우 호출할 페이지를 지정한다.
	isErrorPage 오류를 처리해주는 페이지로 지정해 줄때 사용한다.
	등이 있다.

	include 지시어
	<%@ include file="포함할 파일이름" %>
	include는 여러 페이지에 공통으로 들어가는 내용을 관리할 때 매우 유용하게 사용된다.
	타 사이트화면을 보면
	화면이 블록 여러개로 나뉘어 있고 각각의 블록이 별도의 기능을 독립적으로 수행하고 있는 것을 볼 수 있는데.
	이러한것을 include 지시어를 이용하여 구현이 가능하다.
	ex)
		<td><%@include file="news.jsp" %></td>
		<td><%@include file="shopping.jsp" %></td>

액션(Action)
	JSP 페이지 간 흐름제어
	자바 애플릿 지원
	자바 빈즈 컴포넌트와 JSP상호작용 지원
	대표적인 액션의 종류
	<jsp:include page="xx.jsp" /> 다른 페이지를 현재 페이지에 포함
	<jsp:forward page="xx.jsp" /> 현재 페이지의 제어를 다른페이지로 전달
	<jsp:useBean scope="page" id="cls" class="xx.Mybean " /> 클래스 사용선언
	<jsp:setProperty name="cls" property="xxx" /> useBean으로 선언된 빈즈 클래스의 setxxx()메서드를 호출한다.
	<jsp:getPropery name="cls" property="xxx" /> useBean으로 선언된 빈즈 클래스의 getxxx()메서드를 호출한다.
			 plugin
  <jsp:param name="user" value="홍길동" /> include,forward 액션에서 사용할 수 있는 파라미터를 설정한다.
<jsp:include page="footer.jsp">
	<jsp:param name="email" value ="test@test.net" />
포워드의 경우에는
페이지의 주도권자체가 넘어간다.

footer.jsp
<%= request.getParameter("email") %>

내장 객체
jsp 내에서 선언하지 않고 사용할 수 있는 객체
196페이지

<% %> 스크립틀릿

<%@ %>지시태그

<%= %> 표현 태그
메서드 호출 <%= 메소드명 %>
변수 출력 <%= result %>
사칙연산 및 문자열 결합 <%= "i+2="+(i+2)+"입니다" %>

<%! %> 선언태그
	메서드 및 변수 선언

스크립틀릿
<% %>
JSP 문서 내에 자바 코드를 기술하는 부분이며 본문 어느곳에서도 자유롭게
사용할 수 있다.
ex)
<%
	for(int i=1; i<=10; i++){
		out.println(i+"<BR>");
	}
%>
또는
<%
	for(int i=1; i<=10; i++){
%>
<%= i %><BR>
<%
	}
%>

jsp 주석
<%-- --%>

html 주석
<!-- --!>

JSP 내장객체
request 클라이언트측에서 서버에게 요청
response 서버가 클라이언트에게 응답
pageContext
sessionㅠ
application
out 출력스트림으로써 웹 브라우저로 출력하기 위한 내장객체
 auto flush가 false일 경우 버퍼를 비우는데 사용한다.
config
page
exception



장바구니 예제
login.jpg
<form name="form1" method="POST" action="selProduct.jsp">
	<input type="text" name="username" />
	<input type="submit' value="로그인" />
</form>

<%
	requset.setCharacterEncoding("UTF-8");
	requset.setAttribute("username',requset.getParameter("username"));
%>

Cookie cookie[] = request.getCookies();
쿠키들을 불러온다.

<% request.setCharcterEncoding("UTF-8"); %>
쿠키및 겟파라메터들로 불러와지는 것들의 언어 타입을 선언해준다.

response.sendRedirect
제어권을 다른 페이지에 넘겨준다.
그저 페이지만 바뀔뿐 정보를 넘겨주거나 하진 않는다.

forward 액션방식의 호출
파라메터를 넘길 수 있다.
=======
﻿서블릿과 서블릿 컨테이너
	서블릿 : 자바로 웹프로그래밍을 하려고 만들어진 기술.
	서블릿 컨테이너 : 서블릿 컨테이너는 웹 서버와 마찬가지로 URL을 기반으로 한 요청에 따라 해당 서블릿을 실행한다.
	JSP나 서블릿으로 개발하려면 아파치 톰캣과 같은 서블릿 컨테이너가 필요하다.

클라이언트 요청에 대한 서블릿 동작과정
	1. 컨테이너가 서블릿 클래스를 로딩
	2. 서블릿 클래스으 ㅣ생성자 메서드를 호출해서 인스턴스를 생성한다.
	3. 생서된 인스턴스의 init() 메서드가 호출된다. init()메서드는 서블릿
	생명주기에서 단 한번만 실행된다. init()메서드는 각종 초기화 작업등을 수행한다.
	4. 서블릿에 대한 사용자 요청에 대해서는 web.xml 파일 혹은 애너테이션을 참조해서 url 매핑을 확인하고,
	해당 서블릿 인스턴스로부터 스레드를 생성하고 service()메서드를 호출한다.
	5. destroy()메서드는 서블릿이 종료될 때 호출되는 메서드이다.

get 방식
query_string 환경변수를 통해 서버로 전달된다.
방식
http://www.xxx.co.kr/sevlet/login?id=hj&name=hong
url에 노출이 되기때문에 보안상 문제가 생길 수 있다.
240byte까지 데이터 전송 가능하다.
post 방식
서버로 정보를 올리려고 설계된 방식이다.
데이터크기에 제한이 없다.
url에 표시가 되지않는다.

지시어
<%@ %>
	page 지시어( <%@ page %> )
	현재의 jsp 페이지를 컨테이너에서 처리하는 데 필요한 각종 속성을 기술하는 부분으로
	대게 소스코드 맨 앞에서 볼 수 있다.
	language 사용할 스크립트 언어를 지정, 생략할경우 기본값으로 java가 들어간다.
	import 데이터베이스 처리와 기타 외부 패키지나 클래스를 사용해야하는 경우 기술
	session true로 해놓을 경우 세션을 사용할 수 있다.
	autoflush 버퍼를 자동으로 비울것인지 지정
	pageEncoding
	contenttype
	errorPage 현재 페이지에서 오류가 발생할 경우 호출할 페이지를 지정한다.
	isErrorPage 오류를 처리해주는 페이지로 지정해 줄때 사용한다.
	등이 있다.

	include 지시어
	<%@ include file="포함할 파일이름" %>
	include는 여러 페이지에 공통으로 들어가는 내용을 관리할 때 매우 유용하게 사용된다.
	타 사이트화면을 보면
	화면이 블록 여러개로 나뉘어 있고 각각의 블록이 별도의 기능을 독립적으로 수행하고 있는 것을 볼 수 있는데.
	이러한것을 include 지시어를 이용하여 구현이 가능하다.
	ex)
		<td><%@include file="news.jsp" %></td>
		<td><%@include file="shopping.jsp" %></td>

액션(Action)
	JSP 페이지 간 흐름제어
	자바 애플릿 지원
	자바 빈즈 컴포넌트와 JSP상호작용 지원
	대표적인 액션의 종류
	<jsp:include page="xx.jsp" /> 다른 페이지를 현재 페이지에 포함
	<jsp:forward page="xx.jsp" /> 현재 페이지의 제어를 다른페이지로 전달
	<jsp:useBean scope="page" id="cls" class="xx.Mybean " /> 클래스 사용선언
	<jsp:setProperty name="cls" property="xxx" /> useBean으로 선언된 빈즈 클래스의 setxxx()메서드를 호출한다.
	<jsp:getPropery name="cls" property="xxx" /> useBean으로 선언된 빈즈 클래스의 getxxx()메서드를 호출한다.
			 plugin
  <jsp:param name="user" value="홍길동" /> include,forward 액션에서 사용할 수 있는 파라미터를 설정한다.
<jsp:include page="footer.jsp">
	<jsp:param name="email" value ="test@test.net" />
포워드의 경우에는
페이지의 주도권자체가 넘어간다.

footer.jsp
<%= request.getParameter("email") %>

내장 객체
jsp 내에서 선언하지 않고 사용할 수 있는 객체
196페이지

<% %> 스크립틀릿

<%@ %>지시태그

<%= %> 표현 태그
메서드 호출 <%= 메소드명 %>
변수 출력 <%= result %>
사칙연산 및 문자열 결합 <%= "i+2="+(i+2)+"입니다" %>

<%! %> 선언태그
	메서드 및 변수 선언

스크립틀릿
<% %>
JSP 문서 내에 자바 코드를 기술하는 부분이며 본문 어느곳에서도 자유롭게
사용할 수 있다.
ex)
<%
	for(int i=1; i<=10; i++){
		out.println(i+"<BR>");
	}
%>
또는
<%
	for(int i=1; i<=10; i++){
%>
<%= i %><BR>
<%
	}
%>

jsp 주석
<%-- --%>

html 주석
<!-- --!>

JSP 내장객체
request 클라이언트측에서 서버에게 요청
response 서버가 클라이언트에게 응답
pageContext
sessionㅠ
application
out 출력스트림으로써 웹 브라우저로 출력하기 위한 내장객체
 auto flush가 false일 경우 버퍼를 비우는데 사용한다.
config
page
exception



장바구니 예제
login.jpg
<form name="form1" method="POST" action="selProduct.jsp">
	<input type="text" name="username" />
	<input type="submit' value="로그인" />
</form>

<%
	requset.setCharacterEncoding("UTF-8");
	requset.setAttribute("username',requset.getParameter("username"));
%>

Cookie cookie[] = request.getCookies();
쿠키들을 불러온다.

<% request.setCharcterEncoding("UTF-8"); %>
쿠키및 겟파라메터들로 불러와지는 것들의 언어 타입을 선언해준다.

response.sendRedirect
제어권을 다른 페이지에 넘겨준다.
그저 페이지만 바뀔뿐 정보를 넘겨주거나 하진 않는다.

forward 액션방식의 호출
파라메터를 넘길 수 있다.
>>>>>>> remotes/origin/HEAD

<jsp:useBean id="인스턴스명" scope="생존범위" class="패키지/클래스명" />

<jsp:setProperty name="mybean" property="userid" />
<jsp:setProperty name="객체명" property="userpassword" />
또는
<%
 mybean.setUserid(request.getParameter("username"));
%>

<jsp:getProperty name="mybean" property="username" />

또는
<%= mybean.getUsername() %>

JDBC 연결

1. JDBC 드라이버 로드 
	class.forName("com.mysql.jdbc.Driver");
2. 데이터베이스 연결
	DriverManager.getConnection 사용
	java.sql.Connection
	url mysql://localhost:[3306]/db명
	계정 아이디 및 비밀번호
	
3. Statement(쿼리 객체) 생성
	Statement 객체
	PreparedStatement 객체
	사용가능 (Statement 완벽한 쿼리문장일경우, PreparedStatement 완성되지않은 쿼리문장일경우)
4. SQL문 전송
	excuteQuery();
	executeUpdate();
5, 결과받기
	java.sql.ResultSet`
6. 연결해제
	java.sql.Connection
	
	커스텀태그

태그파일 : .tag
몇가지 제약조건을 제외하고는 jsp파일과 동일하다.
WEBINF\tag 폴더에 저장.

jsp파일 : jsp파일에서 taglib 지시어를 설정한 후 커스텀 태그 사용


태그파일의 구조
taglib
include 
tag (태그를 만들때)
attribute 작성하는 태그에 포함될 속성
variable 태그 내용에 필요한 표현 언어 변수를 선언한다.

실습
print.tag
<%@ tag body-content="empty" pageEncoding="UTF-8" %>
	body-content 가 empty 면 <tag> </tag> 사이에 아무 값이 없어도된다. 라는 지시
태그출력 메시지 Hello!

print.tag를 사용하는 jsp파일

PrintTagTest.jsp
	//tag파일 을 사용할경우 tagdir 을 사용
<%@ taglib tagdir="/WEB-INF/tags" prefix="mytag" %>
<mytag:print/>

태그 핸들러
커스텀 태그를 처리하는 객체
태그 파일과 자바 클래스를 이용하여
커스텀 태그를 구현하는 방법이다.

SimpleTag 인터페이스가 제공되면서 SimpleTagSupport 클래스를 상속받아 이전보다 쉽게
구현 가능하다.

구성요소

태그 핸들러 클래스
태그 라이브러리 기술자(tld)
taglib 지시어

void doTag()

JspFragment getJspBody()

JspContext getJspContext()


tld를 사용할 때에는

<%@ taglib uri="tld파일경로" prefix="" %>



